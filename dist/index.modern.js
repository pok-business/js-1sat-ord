import{Script as t,Transaction as n,TxIn as o,P2PKHAddress as e,TxOut as s,SigHash as r}from"bsv-wasm";import{Buffer as i}from"buffer";import a from"fs";import c from"path";import _ from"os";import{Sigma as g}from"sigma-protocol";const u=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function l(t){console.log(`[dotenv@16.0.3][DEBUG] ${t}`)}const d={config:function(t){let n=c.resolve(process.cwd(),".env"),o="utf8";const e=Boolean(t&&t.debug),s=Boolean(t&&t.override);var r;t&&(null!=t.path&&(n="~"===(r=t.path)[0]?c.join(_.homedir(),r.slice(1)):r),null!=t.encoding&&(o=t.encoding));try{const t=d.parse(a.readFileSync(n,{encoding:o}));return Object.keys(t).forEach(function(n){Object.prototype.hasOwnProperty.call(process.env,n)?(!0===s&&(process.env[n]=t[n]),e&&l(!0===s?`"${n}" is already defined in \`process.env\` and WAS overwritten`:`"${n}" is already defined in \`process.env\` and was NOT overwritten`)):process.env[n]=t[n]}),{parsed:t}}catch(t){return e&&l(`Failed to load ${n} ${t.message}`),{error:t}}},parse:function(t){const n={};let o,e=t.toString();for(e=e.replace(/\r\n?/gm,"\n");null!=(o=u.exec(e));){const t=o[1];let e=o[2]||"";e=e.trim();const s=e[0];e=e.replace(/^(['"`])([\s\S]*)\1$/gm,"$2"),'"'===s&&(e=e.replace(/\\n/g,"\n"),e=e.replace(/\\r/g,"\r")),n[t]=e}return n}};var p=d.config,f=d.parse,m=d;m.config=p,m.parse=f;const h=t=>{for(var n=[],o=0,e=t.length;o<e;o++){var s=Number(t.charCodeAt(o)).toString(16);n.push(s)}return n.join("")};p();const w=(n,o,e,s)=>{let r="";if(void 0!==o&&void 0!==e){const t=h("ord"),n=i.from(o,"base64").toString("hex");r=`OP_0 OP_IF ${t} OP_1 ${h(e)} OP_0 ${n} OP_ENDIF`}let a=`${n.get_locking_script().to_asm_string()}${r?" "+r:""}`;if(s&&null!=s&&s.app&&null!=s&&s.type){a=`${a} OP_RETURN ${h("1PuQa7K62MiKCtssSLKy1kh56WWU7MtUR5")} ${h("SET")}`;for(const[t,n]of Object.entries(s))"cmd"!==t&&(a=`${a} ${h(t)} ${h(n)}`)}return t.from_asm_string(a)},v=async(r,a,c,_)=>{let g=new n(1,0),u=new o(i.from(r.txid,"hex"),r.vout,t.from_asm_string(r.script));g.add_input(u);const l=w(e.from_string(a),null==c?void 0:c.dataB64,null==c?void 0:c.contentType,_);let d=new s(BigInt(1),l);return g.add_output(d),g},y=async({fundingTx:t,utxos:n,destinationAddress:o,changeAddress:r,satPerByteFee:i,inscription:a,additionalPayments:c=[],metadata:_,signer:u})=>{const l=t,d=w(e.from_string(o),a.dataB64,a.contentType,_);let p=new s(BigInt(1),d);l.add_output(p);for(let t of c){let n=new s(t.amount,e.from_string(t.to).get_locking_script());l.add_output(n)}let f=0n,m=l.get_noutputs();for(const t of Array(m).keys()){var h;f+=(null==(h=l.get_output(t))?void 0:h.get_satoshis())||0n}const v=e.from_string(r).get_locking_script(),y=Math.ceil(i*(l.get_size()+O)),x=BigInt(n.reduce((t,n)=>t+n.satoshis,0))-f-BigInt(y);if(x<0)throw new Error("Inadequate satoshis for fee");if(x>0){let t=new s(BigInt(x),v);l.add_output(t)}const $=null==u?void 0:u.idKey,B=new g(l),{signedTx:I}=B.sign($);return I},x=async(a,c,_,u,l,d=[],p,f,m,h)=>{let v,y=m||new n(1,0);m||(v=new o(i.from(a.txid,"hex"),a.vout,t.from_asm_string("")),y.add_input(v));const x=w(e.from_string(c),l.dataB64,l.contentType,f);let $=new s(BigInt(1),x);y.add_output($);for(let t of d){let n=new s(t.amount,e.from_string(t.to).get_locking_script());y.add_output(n)}let B=0n,k=y.get_noutputs();for(const t of Array(k).keys()){var T;B+=(null==(T=y.get_output(t))?void 0:T.get_satoshis())||0n}const b=e.from_string(_).get_locking_script(),P=Math.ceil(u*(y.get_size()+O+(m?0:I))),S=BigInt(a.satoshis)-B-BigInt(P);if(S<0)throw new Error("Inadequate satoshis for fee");if(S>0){let t=new s(BigInt(S),b);y.add_output(t)}const A=null==h?void 0:h.idKey,E=null==h?void 0:h.keyHost;if(A){const t=new g(y),{signedTx:n}=t.sign(A);y=n}else if(E){const t=null==h?void 0:h.authToken,n=new g(y);try{const{signedTx:o}=await n.remoteSign(E,t);y=o}catch(t){throw console.log(t),new Error("Remote signing to "+E+" failed")}}if(!m&&v&&p){const n=y.sign(p,r.ALL|r.FORKID,0,t.from_asm_string(a.script),BigInt(a.satoshis));v.set_unlocking_script(t.from_asm_string(`${n.to_hex()} ${p.to_public_key().to_hex()}`)),y.set_input(0,v)}return y},$=async(a,c,_,g,u,l,d,p,f,m=[])=>{let h=new n(1,0),v=new o(i.from(c.txid,"hex"),c.vout,t.from_asm_string(""));h.add_input(v);let y,x=new o(i.from(a.txid,"hex"),a.vout,t.from_asm_string(""));h.add_input(x);const $=e.from_string(d);y=null!=p&&p.dataB64&&null!=p&&p.contentType?w($,p.dataB64,p.contentType,f):$.get_locking_script();let B=new s(BigInt(1),y);h.add_output(B);for(let t of m){let n=new s(t.amount,e.from_string(t.to).get_locking_script());h.add_output(n)}let k=0n,T=h.get_noutputs();for(const t of Array(T).keys()){var b;k+=(null==(b=h.get_output(t))?void 0:b.get_satoshis())||0n}const P=e.from_string(g).get_locking_script(),S=Math.ceil(u*(h.get_size()+O+2*I)),A=BigInt(a.satoshis)-k-BigInt(S);let E=new s(A,P);h.add_output(E);const F=h.sign(l,r.InputOutput,0,t.from_asm_string(c.script),BigInt(c.satoshis));v.set_unlocking_script(t.from_asm_string(`${F.to_hex()} ${l.to_public_key().to_hex()}`)),h.set_input(0,v);const K=h.sign(_,r.InputOutput,1,t.from_asm_string(a.script),BigInt(a.satoshis));return x.set_unlocking_script(t.from_asm_string(`${K.to_hex()} ${_.to_public_key().to_hex()}`)),h.set_input(1,x),h},B=async(e,a,c,_)=>{const g=new n(1,0);let u=0;for(let t of e||[])u+=t.satoshis;const l=u-_;console.log({feeSats:_,satsIn:u,satsOut:l}),g.add_output(new s(BigInt(l),c.get_locking_script()));let d=0;for(let n of e||[]){console.log({u:n});const e=new o(i.from(n.txid,"hex"),n.vout,t.from_asm_string(""));console.log({inx:e}),e.set_satoshis(BigInt(n.satoshis)),g.add_input(e);const s=g.sign(a,r.InputOutputs,d,t.from_asm_string(n.script),BigInt(n.satoshis));e.set_unlocking_script(t.from_asm_string(`${s.to_hex()} ${a.to_public_key().to_hex()}`)),g.set_input(d,e),d++}return g},I=107,k=148,O=34;export{k as P2PKH_FULL_INPUT_SIZE,I as P2PKH_INPUT_SCRIPT_SIZE,O as P2PKH_OUTPUT_SIZE,w as buildInscription,v as buildReinscriptionTemplate,x as createOrdinal,y as createOrdinalFromFundingTx,$ as sendOrdinal,B as sendUtxos};
//# sourceMappingURL=index.modern.js.map
